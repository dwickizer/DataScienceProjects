x
x[15]
x[1]
x[20]
x[0]
x<-vector('numeric',10)
x
y<-c("a",TRUE)
y
x<-0:6
class(x)
as.numeric(x)
as.logical(x)
as.complex(x)
x<-c("a","b","c")
as.numerica(x)
as.numeric(x)
m <- matrix(nrow = 2, ncol =3)
dim(m)
attributes(m)
m <- matrix(1:6, nrow = 2, ncol = 3)
m
m <- matrix(1:6, nrow = 2, ncol = 3, byrow = TRUE)
m
m <- 1:20
m
dim(m)
dim(m) <- c(4,5)
m
attributes(m)
dim(m) <- c(4,5,byrow = TRUE)
m
n <- transpose(m)
help
help transpose
modules
"modules"
help()
x < 1:10
x <- 1:10
y <- 21:30
y <- 11:20
z <- rbind(x,y)
z
z <- cbind(x,y)
z
l <- list("a", 1, TRUE, 10.2)
l
x<-factor(c("yes","no","yes","no","yes"))
x
attrib(x)
attribute(x)
attributes(x)
table(x)
unclass(x)
x
x <- c("a","b")
x <- c("a","b","c","d","e","a")
x
x[1:5]
x[x>a]
x[ x > "a"]
u <- x > "a"
u
x[u]
m <- matrix(1:4, nrow=2,ncol=2)
dimnames(m) <- list(c("a","b"), c("c","d"))
m
m[1,]
m[,1]
?
data
d
data
class(x <- c(4, "a", TRUE))
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
z <- cbind(x,y)
z
x <- list(2, "a", "b", TRUE)
class(x[[1]])
x[[1]]
x <- 1:4
y <- 2
x + 7
x + y
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
data[1,]
data[2,]
data[1:2,]
data[152:153]
data[152:153,]
data[47,"Ozone"]
oz <- subset(data,Ozone == NA)
length(oz)
oz
oz <- subset(data[,"Ozone"], Ozone = NA)
oz <- data[,"Ozone"]
length(is.NA(oz))
oz
is.na(oz)
length(oz[oz == NA])
length(oz[oz == TRUE])
length(is.na[oz] == TRUE)
length(oz[is.na(oz)])
mean(oz[!is.na(oz)])
s <- subset(data, Ozone > 31 & Temp > 90)
s
mean(s[,"Solar.R"])
t <- subset(data, Month == 6)
t
mean(t[,"Temp"])
z <- subset(data, Month == 5)
z
z[,"Ozone"]
max(z[,"Ozone"],na.rm = TRUE)
max(z[,"Ozone"])
class(x <- 4L)
class(x <- 4)
class(x <- c(4, "a", TRUE))
x
x <- c(1,3, 5)
y
y <- c(3, 2, 10)
rbind(x,y)
x <- list(2, "a", "b", TRUE)
class(x[[1]])
data[1:2,]
data[152:153,]
data[47,"Ozone"]
oz <- data[,"Ozone"]
length(oz[is.na(oz)])
oz
mean(oz,na.rm=TRUE)
d <- subset(data, Ozone > 31 & Temp > 90)
d
mean(d[,"Solar.R"])
m6 <- subset(data, Month == 6)
m6
mean(m6[,"Temp"])
m5 <- subset(data, Month == 5)
max(m5[,"Ozone"], na.rm=TRUE)
x <- list(2, "a", "b", TRUE)
class(x[[1]])
x[[1]]
str(x)
str(x[[1]])
class(x)
a <- x[[1]]
a
class(a)
b <- 2,2
b <- [2,2]
b <- (2,2)
b <- vector(2,2)
?vector
?args
?paste
args(paste)
paste("a","b","c", sep=":")
paste("a","b","c", sep="/")
paste("a","b","c", sep="\")
paste("a","b","c", sep="\'")
paste("a","b","c", se="\'")
paste("a","b","c", sep="\'")
paste("a","b","c","" sep="\'")
paste("a","b","c"," " sep="\'")
paste("a","b","c",NULL sep="\'")
paste("a","b","c","d" sep="\'")
paste("a","b","c"," ", sep="\'")
paste("a","b","c","", sep="\'")
paste("","a","b","c","", sep="\'")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
install_packages("dplyr")
help install
install.packages("dplyr")
library("dplyr")
packageVersion("dplyr")
swirl()
cran <- tbl_df(mydf)
rm("mydf")
cran
?manip
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -X:size(X:size))
select(cran,-5:20)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, country == "IN", version <= "3.0.2")
filter(cran, country == "IN", r_version <= "3.0.2")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version)
)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 100)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
swirl()
exit
quit
getwd()
setwd("./Desktop/Data Science - Johns Hopkins/DataScienceProjects/3. GettingAndCleaningData/")
library("swirl")
swirl()
swirl
swirl()
swirl()
swirl()
packageVersion("swirl")
swirl()
swirl()
swirl()
swirl
swirl()
?install.packages()
ls()
