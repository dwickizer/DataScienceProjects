clear
clr
get ("n", environment(cube))
get ("n", environment(square))
make.power <- function (n) { ## Returns a function, pow
pow <- function (x) {
x^n  ## n is defined within make.power's environment
}
pow
}
x <- matrix(1:4, 2, 2)
x
y <- matrix(rep(4),2,2)
y
x %*% y
x * y
x
y
?unclass
as.date("1970-01-01")
as.Date("1970-01-01")
x <-as.Date("1970-01-01")
class(x)
unclass(x)
x <-as.Date("1958-08-01")
x
unclass(x)
unclass(as.Date("2014-08-10"))
x <- Sys.time()
x
p <- as.POSIXlt(x)
p
unclass(p)
names(unclass(p))
p$sec
p
p$year
p$mon
p$mday
p$yday
?as.POSIXlt
weekdays(p)
months(p)
years(p)
year(p)
quarters(p)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
cube <- function(x, n) {
x^3
}
cube(3)
<- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f
f <- 1
class(h)
names(class(h))
unclass(h)
?h
L
d <- 3L
d
setwd("~/Desktop/Data Science - Johns Hopkins/2. R Programming/Projects/Assignment 1")
setwd("~/Desktop/Data Science - Johns Hopkins/DataScienceProjects/2. R_Programming")
setwd("~/Desktop/Data Science - Johns Hopkins/DataScienceProjects/2. R_Programming/Assignment 1")
dir
dir .
print "hello"
print
print("hello")
id <- 1:332
id[1]
id[1] < 0
len(id) > 332
length(id) > 332
?As
?As.Data
As.Numeric
As.String
as.String
as.Numeric
?read.csv
test <- read.csv("specdata/001.csv", header = TRUE, sep =",")
test
test[,"sulfite"]
test[1:2,]
test[,"sulfate"]
test[,"sulfate",na.rm = TRUE]
test[,"sulfate", NA.rm = TRUE]
?as.Numeric
id <- 1:10
id
str(id)
class(id)
?as.logical
?as.*
?as.character
?as.string
?as.char
?as.character
i <- id[5]
filename <- as.character(i) + ".csv"
filename <- as.character(as.numeric((i)) + ".csv"
filename <- as.character(as.numeric(i)) + ".csv"
?as.text
?as.string
as.str
help(string)
help("string")
help("as.character")
x <- 1
class(x)
as.character(x)
?print
?dir
list <- list.files("specdata")
list
i
filename <- c(i,".csv")
filename
class(filename)
f <- filename[1] + filename[2]
f <- filename[1] + filename[2]
?concatenate
i
sprintf(%05d, i)
?sprintf
sprintf("%05d", i)
sprintf("%03d", i)
id <- 1:332
for (i in id){}
for (i in id){}
for (i in id){sprintf("%03d", i)}
id
for (i in id) {
sprintf("%03d", i)
}
i
id
for (i in id) sprintf("%03d", i)
for (i in id) print (i)
for (i in id) sprintf (i)
for (i in id) sprintf ("%f",i)
filename <- sprintf ("%03d.csv", id[5])
filename
directory <- "ralph"
directory
filename <- sprintf ("%s/%03d.csv", directory, id[5])
filename
library(pollutantname.R)
library(pollutantname)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Approach:
##
## 1. Given a range of monitors, each corresponding to a file,
##    Will need to read in csv file (using a for loop)
##    That will necessitate changing the id to a "ccc.csv" format
## 2. Collect appropriate column, based on pollutant entered.
## 3. Strip out all NAs
## 4. Concatenate the readings into a numeric vector
## 5. After reading them all, calculate and return the mean on
##    the numeric vector
if (id[1] < 1 || length(id) > 332) {
print ("Error: Function pollutantmean: ID out of bounds.")
}
for (i in id){
filename <- sprintf ("%s/%03d.csv", directory, i) ## Convert id to filename
print (filename)
##f <- read.csv(filename, header = TRUE, sep =",")  ## Read csv file
}
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean("specdata", "nitrate", 1:5)
pollutantmean("specdata", "nitrate", 1:332)
test
test <- read.csv("specdata/005.csv", header = TRUE, sep = ",", skipNul = TRUE)
test
test <- read.csv("specdata/005.csv", header = TRUE, sep = ",")
test
length(test)
str(test)
class(test)
pollutant <- "nitrate"
p <- test[,pollutant]
p
p <- mean(test[,pollutant], na.rm = TRUE)
p
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Approach:
##
## 1. Given a range of monitors, each corresponding to a file,
##    Will need to read in csv file (using a for loop)
##    That will necessitate changing the id to a "ccc.csv" format
## 2. Collect appropriate column, based on pollutant entered.
## 3. Strip out all NAs
## 4. Concatenate the readings into a numeric vector
## 5. After reading them all, calculate and return the mean on
##    the numeric vector
if (id[1] < 1 || length(id) > 332) {
print ("Error: Function pollutantmean: ID out of bounds.")
}
p <- vector(mode = "numeric", length = 332)
for (i in id){
filename <- sprintf ("%s/%03d.csv", directory, i) ## Convert id to filename
print (filename)
f <- read.csv(filename, header = TRUE, sep =",")  ## Read csv file
p <- mean(f[,pollutant], na.rm = TRUE) ## store the mean for every file in a vector location
}
## Calculate the mean of all the means
pmean <- mean(p)
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
pmean
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
test <- read.csv("specdata/023.csv", header = TRUE, sep = ",")
pollutant <- "nitrate"
p <- mean(test[,pollutant], na.rm = TRUE)
p
a < c(1:30)
a <- c(1:30)
class(a)
a <- as.numeric(1:30)
a
class(a)
b <- as.numeric(15:45)
c <- as.numeric(20:80)
sum <- 0.0
sum_a <- 0.0
class(sum_a)
for (i in 1:length(a)) sum_a <- sum_a + a[i]
sum_a
avg_a <- sum_a/length(a)
avg_a
mean(a)
sum_b <- 0.0
sum_c <- 0.0
for (i in 1:length(b)) sum_b <- sum_b + b[i]
sum_b
avg_b <- sum_b/length(b)
avg_b
mean(b)
for (i in 1:length(c)) sum_c <- sum_c + c[i]
sum_c
avg_c <- sum_c/length(c)
avg_c
mean(c)
tmean <- mean(mean(a),mean(b),mean(c))
tmean
mean(avg_a,avg_b,avg_c)
mean(2,4,6)
temp <- c(avg_a,avg_b,avg_c)
temp
mean(temp)
tmean <- (sum_a + sum_b + sum_c)/(length(a) + length(b) + length(c))
tmean
a
b
c
tsum
length(a)
length(b)
length(c)
tsum <- sum_a + sum_b + sum_c
tsum
tmean
tsum/122
(mean(a) + mean(b) + mean(c)) / 3
?sqrt
sqrt(mean(a)^2 + mean(b)^2 + mean(c)^2)
p < 0.0
p <- 0.0
p
p <- c(p,1.0)
p
test
test[!is.NA(test)]
p <- test[,"nitrate"]
p
p[!is.NA(p)]
?is.NA
?is.na
p[!is.na(p)]
q <- p[!is.na(p)]
q
test <- read.csv("specdata/024.csv", header = TRUE, sep = ",")
p <- test[,"nitrate"]
p[!is.na(p)]
q <- c(q, p[!is.na(p)])
q
p[!is.na(p)]
p <- vector(mode="numeric")
p
p < c(p,1)
p <- vector(mode="numeric")
p <- c(p,1.0)
p
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
p <- 4.064128
p
?round
round(p,3)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 1:10)
pollutantmean("specdata", "nitrate", 1:400)
?break
break
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 0:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:400)
test <- read.csv("specdata/123.csv", header = TRUE, sep = ",")
test
class(test)
is.na(test)
test[,!is.na(test)]
test
anyNA(test)
is.na(test)
!is.na(test)
length(test)
class(test)
str(test)
?str
str(test)$data.frame
test[2191]
test[2191,]
test[2192,]
test[2191,]
a <- test[test$sufate != NA & test$nitrate != NA]
a
a <- test[test$sufate != NA & test$nitrate != NA]
test
test[1:2,]
test[,test$sulfate != "NA" & test$nitrate != "NA"]
test[,test$sulfate != "NA"]
nobs <- subset(f, sulfate != "NA" & nitrate != "NA")
nobs <- subset(f, na.rm = TRUE)
nobs <- subset(test, na.rm = TRUE)
nobs
nobs <- subset(test, sulfate != NA)
nobs
nobs <- subset(test, sulfate != "NA")
nobs
nobs <- subset(test, sulfate != "NA" & nitrate != "NA")
nobs
str(nobs)
length(nobs[,"sulfate"])
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("complete.R")
complete("specdata", 3)
source("complete.R")
complete("specdata", 3)
complete("specdata", c(2, 4, 8, 10, 12))
environment()
f <- read.csv("specdata/001.csv, header = TRUE, sep =",")
f <- read.csv("specdata/001.csv", header = TRUE, sep =",")
f
obs <- subset(f, sulfate != "NA" & nitrate != "NA")
obs
x <- obs[,2:3]
x
x <- obs[,"sulfate","nitrate"]
x <- obs[,c("sulfate","nitrate")]
x
x <- obs[,c("sulfate","nitrate")]
str(x)
length(x[,"sulfate"])
cor(1:10, 2:11)
source("complete.R")
complete("specdata")
environment()
obs <- complete("specdata")
str(obs)
obs
obs[1:2]
class(obs)
str(obs)
environment(obs)
source("complete.R")
myobs <- complete("specdata")
obs
nobs
?nobs
myobs[, myobs$nobs > 150]
myobs[, myobs$nobs > 150]
?data.frame
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
L3 <- LETTERS[1:3]
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
myobs <- complete("specdata")
str(myobs)
myobs[,myobs$nobs > 150]
myobs[myobs$nobs > 150]
myobs[myobs$nobs > 150,]
myobs[myobs$nobs > 1000,]
myobs[myobs$nobs > 1090,]
x <- vector(mode="numeric")
x
x <- read.csv("specdata/001.csv", header=TRUE, sep=",")
x
obs <- subset(x, sulfate != "NA" & nitrate != "NA")
obs
obs
str(obs)
sobs <- c(sobs, obs[,"sulfate"])
sobs <- vector(mode = "numeric")
sobs <- c(sobs, obs[,"sulfate"])
sobs
nobs <- vector(mode = "numeric")
nobs <- c(nobs, obs[,"nitrate"])
nobs
source("corr.R")
cr <- corr("specdata", 150)
source("complete.R")
allObs <- complete(directory)  ## Read in all observation summaries
directory <- "specdata"
source("complete.R")
allObs <- complete(directory)  ## Read in all observation summaries
allObs
a <- allObs[allObs$nobs > 150]
a <- allObs[allObs$nobs > 150,]
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
cr
head(cr)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
